//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Faculdade {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FaculdadeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FaculdadeDataSet : global::System.Data.DataSet {
        
        private alunoDataTable tablealuno;
        
        private cursoDataTable tablecurso;
        
        private global::System.Data.DataRelation relationfk_idcurso;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FaculdadeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected FaculdadeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["aluno"] != null)) {
                    base.Tables.Add(new alunoDataTable(ds.Tables["aluno"]));
                }
                if ((ds.Tables["curso"] != null)) {
                    base.Tables.Add(new cursoDataTable(ds.Tables["curso"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public alunoDataTable aluno {
            get {
                return this.tablealuno;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public cursoDataTable curso {
            get {
                return this.tablecurso;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            FaculdadeDataSet cln = ((FaculdadeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["aluno"] != null)) {
                    base.Tables.Add(new alunoDataTable(ds.Tables["aluno"]));
                }
                if ((ds.Tables["curso"] != null)) {
                    base.Tables.Add(new cursoDataTable(ds.Tables["curso"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablealuno = ((alunoDataTable)(base.Tables["aluno"]));
            if ((initTable == true)) {
                if ((this.tablealuno != null)) {
                    this.tablealuno.InitVars();
                }
            }
            this.tablecurso = ((cursoDataTable)(base.Tables["curso"]));
            if ((initTable == true)) {
                if ((this.tablecurso != null)) {
                    this.tablecurso.InitVars();
                }
            }
            this.relationfk_idcurso = this.Relations["fk_idcurso"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "FaculdadeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FaculdadeDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablealuno = new alunoDataTable();
            base.Tables.Add(this.tablealuno);
            this.tablecurso = new cursoDataTable();
            base.Tables.Add(this.tablecurso);
            this.relationfk_idcurso = new global::System.Data.DataRelation("fk_idcurso", new global::System.Data.DataColumn[] {
                        this.tablecurso.idcursoColumn}, new global::System.Data.DataColumn[] {
                        this.tablealuno.fk_idcursoColumn}, false);
            this.Relations.Add(this.relationfk_idcurso);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializealuno() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializecurso() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FaculdadeDataSet ds = new FaculdadeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void alunoRowChangeEventHandler(object sender, alunoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void cursoRowChangeEventHandler(object sender, cursoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class alunoDataTable : global::System.Data.TypedTableBase<alunoRow> {
            
            private global::System.Data.DataColumn columnidaluno;
            
            private global::System.Data.DataColumn columnnomealuno;
            
            private global::System.Data.DataColumn columncpf;
            
            private global::System.Data.DataColumn columndatanascimento;
            
            private global::System.Data.DataColumn columncontato;
            
            private global::System.Data.DataColumn columncontatoparente;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnendereco;
            
            private global::System.Data.DataColumn columnturma;
            
            private global::System.Data.DataColumn columnfk_idcurso;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoDataTable() {
                this.TableName = "aluno";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal alunoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected alunoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idalunoColumn {
                get {
                    return this.columnidaluno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nomealunoColumn {
                get {
                    return this.columnnomealuno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cpfColumn {
                get {
                    return this.columncpf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn datanascimentoColumn {
                get {
                    return this.columndatanascimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn contatoColumn {
                get {
                    return this.columncontato;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn contatoparenteColumn {
                get {
                    return this.columncontatoparente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn enderecoColumn {
                get {
                    return this.columnendereco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn turmaColumn {
                get {
                    return this.columnturma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fk_idcursoColumn {
                get {
                    return this.columnfk_idcurso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoRow this[int index] {
                get {
                    return ((alunoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event alunoRowChangeEventHandler alunoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event alunoRowChangeEventHandler alunoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event alunoRowChangeEventHandler alunoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event alunoRowChangeEventHandler alunoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddalunoRow(alunoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoRow AddalunoRow(int idaluno, string nomealuno, string cpf, System.DateTime datanascimento, string contato, string contatoparente, string email, string endereco, string turma, cursoRow parentcursoRowByfk_idcurso) {
                alunoRow rowalunoRow = ((alunoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idaluno,
                        nomealuno,
                        cpf,
                        datanascimento,
                        contato,
                        contatoparente,
                        email,
                        endereco,
                        turma,
                        null};
                if ((parentcursoRowByfk_idcurso != null)) {
                    columnValuesArray[9] = parentcursoRowByfk_idcurso[0];
                }
                rowalunoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowalunoRow);
                return rowalunoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoRow FindByidaluno(int idaluno) {
                return ((alunoRow)(this.Rows.Find(new object[] {
                            idaluno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                alunoDataTable cln = ((alunoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new alunoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnidaluno = base.Columns["idaluno"];
                this.columnnomealuno = base.Columns["nomealuno"];
                this.columncpf = base.Columns["cpf"];
                this.columndatanascimento = base.Columns["datanascimento"];
                this.columncontato = base.Columns["contato"];
                this.columncontatoparente = base.Columns["contatoparente"];
                this.columnemail = base.Columns["email"];
                this.columnendereco = base.Columns["endereco"];
                this.columnturma = base.Columns["turma"];
                this.columnfk_idcurso = base.Columns["fk_idcurso"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnidaluno = new global::System.Data.DataColumn("idaluno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidaluno);
                this.columnnomealuno = new global::System.Data.DataColumn("nomealuno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnomealuno);
                this.columncpf = new global::System.Data.DataColumn("cpf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpf);
                this.columndatanascimento = new global::System.Data.DataColumn("datanascimento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatanascimento);
                this.columncontato = new global::System.Data.DataColumn("contato", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontato);
                this.columncontatoparente = new global::System.Data.DataColumn("contatoparente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontatoparente);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnendereco = new global::System.Data.DataColumn("endereco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendereco);
                this.columnturma = new global::System.Data.DataColumn("turma", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnturma);
                this.columnfk_idcurso = new global::System.Data.DataColumn("fk_idcurso", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfk_idcurso);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidaluno}, true));
                this.columnidaluno.AllowDBNull = false;
                this.columnidaluno.Unique = true;
                this.columnnomealuno.AllowDBNull = false;
                this.columnnomealuno.MaxLength = 100;
                this.columncpf.AllowDBNull = false;
                this.columncpf.MaxLength = 15;
                this.columndatanascimento.AllowDBNull = false;
                this.columncontato.AllowDBNull = false;
                this.columncontato.MaxLength = 15;
                this.columncontatoparente.AllowDBNull = false;
                this.columncontatoparente.MaxLength = 15;
                this.columnemail.MaxLength = 100;
                this.columnendereco.AllowDBNull = false;
                this.columnendereco.MaxLength = 150;
                this.columnturma.AllowDBNull = false;
                this.columnturma.MaxLength = 20;
                this.columnfk_idcurso.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoRow NewalunoRow() {
                return ((alunoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new alunoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(alunoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.alunoRowChanged != null)) {
                    this.alunoRowChanged(this, new alunoRowChangeEvent(((alunoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.alunoRowChanging != null)) {
                    this.alunoRowChanging(this, new alunoRowChangeEvent(((alunoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.alunoRowDeleted != null)) {
                    this.alunoRowDeleted(this, new alunoRowChangeEvent(((alunoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.alunoRowDeleting != null)) {
                    this.alunoRowDeleting(this, new alunoRowChangeEvent(((alunoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovealunoRow(alunoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FaculdadeDataSet ds = new FaculdadeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "alunoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class cursoDataTable : global::System.Data.TypedTableBase<cursoRow> {
            
            private global::System.Data.DataColumn columnidcurso;
            
            private global::System.Data.DataColumn columnnomecurso;
            
            private global::System.Data.DataColumn columnturno;
            
            private global::System.Data.DataColumn columncargahoraria;
            
            private global::System.Data.DataColumn columndescricao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoDataTable() {
                this.TableName = "curso";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal cursoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected cursoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idcursoColumn {
                get {
                    return this.columnidcurso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nomecursoColumn {
                get {
                    return this.columnnomecurso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn turnoColumn {
                get {
                    return this.columnturno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cargahorariaColumn {
                get {
                    return this.columncargahoraria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoRow this[int index] {
                get {
                    return ((cursoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event cursoRowChangeEventHandler cursoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event cursoRowChangeEventHandler cursoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event cursoRowChangeEventHandler cursoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event cursoRowChangeEventHandler cursoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddcursoRow(cursoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoRow AddcursoRow(int idcurso, string nomecurso, string turno, string cargahoraria, string descricao) {
                cursoRow rowcursoRow = ((cursoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idcurso,
                        nomecurso,
                        turno,
                        cargahoraria,
                        descricao};
                rowcursoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcursoRow);
                return rowcursoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoRow FindByidcurso(int idcurso) {
                return ((cursoRow)(this.Rows.Find(new object[] {
                            idcurso})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                cursoDataTable cln = ((cursoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new cursoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnidcurso = base.Columns["idcurso"];
                this.columnnomecurso = base.Columns["nomecurso"];
                this.columnturno = base.Columns["turno"];
                this.columncargahoraria = base.Columns["cargahoraria"];
                this.columndescricao = base.Columns["descricao"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnidcurso = new global::System.Data.DataColumn("idcurso", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidcurso);
                this.columnnomecurso = new global::System.Data.DataColumn("nomecurso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnomecurso);
                this.columnturno = new global::System.Data.DataColumn("turno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnturno);
                this.columncargahoraria = new global::System.Data.DataColumn("cargahoraria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncargahoraria);
                this.columndescricao = new global::System.Data.DataColumn("descricao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidcurso}, true));
                this.columnidcurso.AllowDBNull = false;
                this.columnidcurso.Unique = true;
                this.columnnomecurso.AllowDBNull = false;
                this.columnnomecurso.MaxLength = 100;
                this.columnturno.AllowDBNull = false;
                this.columnturno.MaxLength = 10;
                this.columncargahoraria.AllowDBNull = false;
                this.columncargahoraria.MaxLength = 10;
                this.columndescricao.AllowDBNull = false;
                this.columndescricao.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoRow NewcursoRow() {
                return ((cursoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new cursoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(cursoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.cursoRowChanged != null)) {
                    this.cursoRowChanged(this, new cursoRowChangeEvent(((cursoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.cursoRowChanging != null)) {
                    this.cursoRowChanging(this, new cursoRowChangeEvent(((cursoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.cursoRowDeleted != null)) {
                    this.cursoRowDeleted(this, new cursoRowChangeEvent(((cursoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.cursoRowDeleting != null)) {
                    this.cursoRowDeleting(this, new cursoRowChangeEvent(((cursoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovecursoRow(cursoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FaculdadeDataSet ds = new FaculdadeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "cursoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class alunoRow : global::System.Data.DataRow {
            
            private alunoDataTable tablealuno;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal alunoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablealuno = ((alunoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idaluno {
                get {
                    return ((int)(this[this.tablealuno.idalunoColumn]));
                }
                set {
                    this[this.tablealuno.idalunoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string nomealuno {
                get {
                    return ((string)(this[this.tablealuno.nomealunoColumn]));
                }
                set {
                    this[this.tablealuno.nomealunoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cpf {
                get {
                    return ((string)(this[this.tablealuno.cpfColumn]));
                }
                set {
                    this[this.tablealuno.cpfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime datanascimento {
                get {
                    return ((global::System.DateTime)(this[this.tablealuno.datanascimentoColumn]));
                }
                set {
                    this[this.tablealuno.datanascimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string contato {
                get {
                    return ((string)(this[this.tablealuno.contatoColumn]));
                }
                set {
                    this[this.tablealuno.contatoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string contatoparente {
                get {
                    return ((string)(this[this.tablealuno.contatoparenteColumn]));
                }
                set {
                    this[this.tablealuno.contatoparenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablealuno.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'email\' na tabela \'aluno\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tablealuno.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string endereco {
                get {
                    return ((string)(this[this.tablealuno.enderecoColumn]));
                }
                set {
                    this[this.tablealuno.enderecoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string turma {
                get {
                    return ((string)(this[this.tablealuno.turmaColumn]));
                }
                set {
                    this[this.tablealuno.turmaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int fk_idcurso {
                get {
                    return ((int)(this[this.tablealuno.fk_idcursoColumn]));
                }
                set {
                    this[this.tablealuno.fk_idcursoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoRow cursoRow {
                get {
                    return ((cursoRow)(this.GetParentRow(this.Table.ParentRelations["fk_idcurso"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_idcurso"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsemailNull() {
                return this.IsNull(this.tablealuno.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetemailNull() {
                this[this.tablealuno.emailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class cursoRow : global::System.Data.DataRow {
            
            private cursoDataTable tablecurso;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal cursoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecurso = ((cursoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int idcurso {
                get {
                    return ((int)(this[this.tablecurso.idcursoColumn]));
                }
                set {
                    this[this.tablecurso.idcursoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string nomecurso {
                get {
                    return ((string)(this[this.tablecurso.nomecursoColumn]));
                }
                set {
                    this[this.tablecurso.nomecursoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string turno {
                get {
                    return ((string)(this[this.tablecurso.turnoColumn]));
                }
                set {
                    this[this.tablecurso.turnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cargahoraria {
                get {
                    return ((string)(this[this.tablecurso.cargahorariaColumn]));
                }
                set {
                    this[this.tablecurso.cargahorariaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string descricao {
                get {
                    return ((string)(this[this.tablecurso.descricaoColumn]));
                }
                set {
                    this[this.tablecurso.descricaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoRow[] GetalunoRows() {
                if ((this.Table.ChildRelations["fk_idcurso"] == null)) {
                    return new alunoRow[0];
                }
                else {
                    return ((alunoRow[])(base.GetChildRows(this.Table.ChildRelations["fk_idcurso"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class alunoRowChangeEvent : global::System.EventArgs {
            
            private alunoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoRowChangeEvent(alunoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public alunoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class cursoRowChangeEvent : global::System.EventArgs {
            
            private cursoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoRowChangeEvent(cursoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public cursoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Faculdade.FaculdadeDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class alunoTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public alunoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "aluno";
            tableMapping.ColumnMappings.Add("idaluno", "idaluno");
            tableMapping.ColumnMappings.Add("nomealuno", "nomealuno");
            tableMapping.ColumnMappings.Add("cpf", "cpf");
            tableMapping.ColumnMappings.Add("datanascimento", "datanascimento");
            tableMapping.ColumnMappings.Add("contato", "contato");
            tableMapping.ColumnMappings.Add("contatoparente", "contatoparente");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("endereco", "endereco");
            tableMapping.ColumnMappings.Add("turma", "turma");
            tableMapping.ColumnMappings.Add("fk_idcurso", "fk_idcurso");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""aluno"" WHERE ((""idaluno"" = :Original_idaluno) AND (""nomealuno"" = :Original_nomealuno) AND (""cpf"" = :Original_cpf) AND (""datanascimento"" = :Original_datanascimento) AND (""contato"" = :Original_contato) AND (""contatoparente"" = :Original_contatoparente) AND ((:IsNull_email = 1 AND ""email"" IS NULL) OR (""email"" = :Original_email)) AND (""endereco"" = :Original_endereco) AND (""turma"" = :Original_turma) AND (""fk_idcurso"" = :Original_fk_idcurso))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_idaluno";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idaluno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_nomealuno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomealuno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_cpf";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cpf";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_datanascimento";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datanascimento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_contato";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contato";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_contatoparente";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contatoparente";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_email";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_email";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_endereco";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "endereco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_turma";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turma";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_fk_idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "fk_idcurso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""public"".""aluno"" (""idaluno"", ""nomealuno"", ""cpf"", ""datanascimento"", ""contato"", ""contatoparente"", ""email"", ""endereco"", ""turma"", ""fk_idcurso"") VALUES (:idaluno, :nomealuno, :cpf, :datanascimento, :contato, :contatoparente, :email, :endereco, :turma, :fk_idcurso)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "idaluno";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idaluno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "nomealuno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomealuno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "cpf";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cpf";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "datanascimento";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datanascimento";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "contato";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contato";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "contatoparente";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contatoparente";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "email";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "endereco";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "endereco";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "turma";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turma";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "fk_idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "fk_idcurso";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""aluno"" SET ""idaluno"" = :idaluno, ""nomealuno"" = :nomealuno, ""cpf"" = :cpf, ""datanascimento"" = :datanascimento, ""contato"" = :contato, ""contatoparente"" = :contatoparente, ""email"" = :email, ""endereco"" = :endereco, ""turma"" = :turma, ""fk_idcurso"" = :fk_idcurso WHERE ((""idaluno"" = :Original_idaluno) AND (""nomealuno"" = :Original_nomealuno) AND (""cpf"" = :Original_cpf) AND (""datanascimento"" = :Original_datanascimento) AND (""contato"" = :Original_contato) AND (""contatoparente"" = :Original_contatoparente) AND ((:IsNull_email = 1 AND ""email"" IS NULL) OR (""email"" = :Original_email)) AND (""endereco"" = :Original_endereco) AND (""turma"" = :Original_turma) AND (""fk_idcurso"" = :Original_fk_idcurso))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "idaluno";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idaluno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "nomealuno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomealuno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "cpf";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cpf";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "datanascimento";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datanascimento";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "contato";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contato";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "contatoparente";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contatoparente";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "email";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "endereco";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "endereco";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "turma";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turma";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "fk_idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "fk_idcurso";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_idaluno";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idaluno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_nomealuno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomealuno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_cpf";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cpf";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_datanascimento";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "datanascimento";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_contato";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contato";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_contatoparente";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "contatoparente";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_email";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_email";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_endereco";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "endereco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_turma";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turma";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_fk_idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "fk_idcurso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::Faculdade.Properties.Settings.Default.FaculdadeConn;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT idaluno, nomealuno, cpf, datanascimento, contato, contatoparente, email, e" +
                "ndereco, turma, fk_idcurso FROM \"public\".aluno";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FaculdadeDataSet.alunoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FaculdadeDataSet.alunoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FaculdadeDataSet.alunoDataTable dataTable = new FaculdadeDataSet.alunoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FaculdadeDataSet.alunoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FaculdadeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "aluno");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_idaluno, string Original_nomealuno, string Original_cpf, System.DateTime Original_datanascimento, string Original_contato, string Original_contatoparente, string Original_email, string Original_endereco, string Original_turma, int Original_fk_idcurso) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_idaluno));
            if ((Original_nomealuno == null)) {
                throw new global::System.ArgumentNullException("Original_nomealuno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nomealuno));
            }
            if ((Original_cpf == null)) {
                throw new global::System.ArgumentNullException("Original_cpf");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cpf));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_datanascimento));
            if ((Original_contato == null)) {
                throw new global::System.ArgumentNullException("Original_contato");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_contato));
            }
            if ((Original_contatoparente == null)) {
                throw new global::System.ArgumentNullException("Original_contatoparente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_contatoparente));
            }
            if ((Original_email == null)) {
                throw new global::System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_email));
            }
            if ((Original_endereco == null)) {
                throw new global::System.ArgumentNullException("Original_endereco");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_endereco));
            }
            if ((Original_turma == null)) {
                throw new global::System.ArgumentNullException("Original_turma");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_turma));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_fk_idcurso));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int idaluno, string nomealuno, string cpf, System.DateTime datanascimento, string contato, string contatoparente, string email, string endereco, string turma, int fk_idcurso) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(idaluno));
            if ((nomealuno == null)) {
                throw new global::System.ArgumentNullException("nomealuno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nomealuno));
            }
            if ((cpf == null)) {
                throw new global::System.ArgumentNullException("cpf");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(cpf));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(datanascimento));
            if ((contato == null)) {
                throw new global::System.ArgumentNullException("contato");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(contato));
            }
            if ((contatoparente == null)) {
                throw new global::System.ArgumentNullException("contatoparente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(contatoparente));
            }
            if ((email == null)) {
                throw new global::System.ArgumentNullException("email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(email));
            }
            if ((endereco == null)) {
                throw new global::System.ArgumentNullException("endereco");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(endereco));
            }
            if ((turma == null)) {
                throw new global::System.ArgumentNullException("turma");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(turma));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(fk_idcurso));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int idaluno, 
                    string nomealuno, 
                    string cpf, 
                    System.DateTime datanascimento, 
                    string contato, 
                    string contatoparente, 
                    string email, 
                    string endereco, 
                    string turma, 
                    int fk_idcurso, 
                    int Original_idaluno, 
                    string Original_nomealuno, 
                    string Original_cpf, 
                    System.DateTime Original_datanascimento, 
                    string Original_contato, 
                    string Original_contatoparente, 
                    string Original_email, 
                    string Original_endereco, 
                    string Original_turma, 
                    int Original_fk_idcurso) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(idaluno));
            if ((nomealuno == null)) {
                throw new global::System.ArgumentNullException("nomealuno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nomealuno));
            }
            if ((cpf == null)) {
                throw new global::System.ArgumentNullException("cpf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(cpf));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(datanascimento));
            if ((contato == null)) {
                throw new global::System.ArgumentNullException("contato");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(contato));
            }
            if ((contatoparente == null)) {
                throw new global::System.ArgumentNullException("contatoparente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(contatoparente));
            }
            if ((email == null)) {
                throw new global::System.ArgumentNullException("email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(email));
            }
            if ((endereco == null)) {
                throw new global::System.ArgumentNullException("endereco");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(endereco));
            }
            if ((turma == null)) {
                throw new global::System.ArgumentNullException("turma");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(turma));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(fk_idcurso));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_idaluno));
            if ((Original_nomealuno == null)) {
                throw new global::System.ArgumentNullException("Original_nomealuno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_nomealuno));
            }
            if ((Original_cpf == null)) {
                throw new global::System.ArgumentNullException("Original_cpf");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_cpf));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_datanascimento));
            if ((Original_contato == null)) {
                throw new global::System.ArgumentNullException("Original_contato");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_contato));
            }
            if ((Original_contatoparente == null)) {
                throw new global::System.ArgumentNullException("Original_contatoparente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_contatoparente));
            }
            if ((Original_email == null)) {
                throw new global::System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_email));
            }
            if ((Original_endereco == null)) {
                throw new global::System.ArgumentNullException("Original_endereco");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_endereco));
            }
            if ((Original_turma == null)) {
                throw new global::System.ArgumentNullException("Original_turma");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_turma));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_fk_idcurso));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nomealuno, 
                    string cpf, 
                    System.DateTime datanascimento, 
                    string contato, 
                    string contatoparente, 
                    string email, 
                    string endereco, 
                    string turma, 
                    int fk_idcurso, 
                    int Original_idaluno, 
                    string Original_nomealuno, 
                    string Original_cpf, 
                    System.DateTime Original_datanascimento, 
                    string Original_contato, 
                    string Original_contatoparente, 
                    string Original_email, 
                    string Original_endereco, 
                    string Original_turma, 
                    int Original_fk_idcurso) {
            return this.Update(Original_idaluno, nomealuno, cpf, datanascimento, contato, contatoparente, email, endereco, turma, fk_idcurso, Original_idaluno, Original_nomealuno, Original_cpf, Original_datanascimento, Original_contato, Original_contatoparente, Original_email, Original_endereco, Original_turma, Original_fk_idcurso);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class cursoTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public cursoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "curso";
            tableMapping.ColumnMappings.Add("idcurso", "idcurso");
            tableMapping.ColumnMappings.Add("nomecurso", "nomecurso");
            tableMapping.ColumnMappings.Add("turno", "turno");
            tableMapping.ColumnMappings.Add("cargahoraria", "cargahoraria");
            tableMapping.ColumnMappings.Add("descricao", "descricao");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"public\".\"curso\" WHERE ((\"idcurso\" = :Original_idcurso) AND (\"nomecur" +
                "so\" = :Original_nomecurso) AND (\"turno\" = :Original_turno) AND (\"cargahoraria\" =" +
                " :Original_cargahoraria) AND (\"descricao\" = :Original_descricao))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idcurso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_nomecurso";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomecurso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_turno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_cargahoraria";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cargahoraria";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_descricao";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "descricao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"public\".\"curso\" (\"idcurso\", \"nomecurso\", \"turno\", \"cargahoraria\", \"d" +
                "escricao\") VALUES (:idcurso, :nomecurso, :turno, :cargahoraria, :descricao)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idcurso";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "nomecurso";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomecurso";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "turno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "cargahoraria";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cargahoraria";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "descricao";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "descricao";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""curso"" SET ""idcurso"" = :idcurso, ""nomecurso"" = :nomecurso, ""turno"" = :turno, ""cargahoraria"" = :cargahoraria, ""descricao"" = :descricao WHERE ((""idcurso"" = :Original_idcurso) AND (""nomecurso"" = :Original_nomecurso) AND (""turno"" = :Original_turno) AND (""cargahoraria"" = :Original_cargahoraria) AND (""descricao"" = :Original_descricao))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idcurso";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "nomecurso";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomecurso";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "turno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "cargahoraria";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cargahoraria";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "descricao";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "descricao";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_idcurso";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "idcurso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_nomecurso";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "nomecurso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_turno";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "turno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_cargahoraria";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "cargahoraria";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_descricao";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "descricao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::Faculdade.Properties.Settings.Default.FaculdadeConn;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT idcurso, nomecurso, turno, cargahoraria, descricao FROM \"public\".curso";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FaculdadeDataSet.cursoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FaculdadeDataSet.cursoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FaculdadeDataSet.cursoDataTable dataTable = new FaculdadeDataSet.cursoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FaculdadeDataSet.cursoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FaculdadeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "curso");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_idcurso, string Original_nomecurso, string Original_turno, string Original_cargahoraria, string Original_descricao) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_idcurso));
            if ((Original_nomecurso == null)) {
                throw new global::System.ArgumentNullException("Original_nomecurso");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nomecurso));
            }
            if ((Original_turno == null)) {
                throw new global::System.ArgumentNullException("Original_turno");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_turno));
            }
            if ((Original_cargahoraria == null)) {
                throw new global::System.ArgumentNullException("Original_cargahoraria");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_cargahoraria));
            }
            if ((Original_descricao == null)) {
                throw new global::System.ArgumentNullException("Original_descricao");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_descricao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int idcurso, string nomecurso, string turno, string cargahoraria, string descricao) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(idcurso));
            if ((nomecurso == null)) {
                throw new global::System.ArgumentNullException("nomecurso");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nomecurso));
            }
            if ((turno == null)) {
                throw new global::System.ArgumentNullException("turno");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(turno));
            }
            if ((cargahoraria == null)) {
                throw new global::System.ArgumentNullException("cargahoraria");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(cargahoraria));
            }
            if ((descricao == null)) {
                throw new global::System.ArgumentNullException("descricao");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(descricao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int idcurso, string nomecurso, string turno, string cargahoraria, string descricao, int Original_idcurso, string Original_nomecurso, string Original_turno, string Original_cargahoraria, string Original_descricao) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(idcurso));
            if ((nomecurso == null)) {
                throw new global::System.ArgumentNullException("nomecurso");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nomecurso));
            }
            if ((turno == null)) {
                throw new global::System.ArgumentNullException("turno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(turno));
            }
            if ((cargahoraria == null)) {
                throw new global::System.ArgumentNullException("cargahoraria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(cargahoraria));
            }
            if ((descricao == null)) {
                throw new global::System.ArgumentNullException("descricao");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(descricao));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_idcurso));
            if ((Original_nomecurso == null)) {
                throw new global::System.ArgumentNullException("Original_nomecurso");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_nomecurso));
            }
            if ((Original_turno == null)) {
                throw new global::System.ArgumentNullException("Original_turno");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_turno));
            }
            if ((Original_cargahoraria == null)) {
                throw new global::System.ArgumentNullException("Original_cargahoraria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_cargahoraria));
            }
            if ((Original_descricao == null)) {
                throw new global::System.ArgumentNullException("Original_descricao");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_descricao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nomecurso, string turno, string cargahoraria, string descricao, int Original_idcurso, string Original_nomecurso, string Original_turno, string Original_cargahoraria, string Original_descricao) {
            return this.Update(Original_idcurso, nomecurso, turno, cargahoraria, descricao, Original_idcurso, Original_nomecurso, Original_turno, Original_cargahoraria, Original_descricao);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private alunoTableAdapter _alunoTableAdapter;
        
        private cursoTableAdapter _cursoTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public alunoTableAdapter alunoTableAdapter {
            get {
                return this._alunoTableAdapter;
            }
            set {
                this._alunoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public cursoTableAdapter cursoTableAdapter {
            get {
                return this._cursoTableAdapter;
            }
            set {
                this._cursoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._alunoTableAdapter != null) 
                            && (this._alunoTableAdapter.Connection != null))) {
                    return this._alunoTableAdapter.Connection;
                }
                if (((this._cursoTableAdapter != null) 
                            && (this._cursoTableAdapter.Connection != null))) {
                    return this._cursoTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._alunoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cursoTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(FaculdadeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cursoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.curso.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cursoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._alunoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.aluno.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._alunoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(FaculdadeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cursoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.curso.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cursoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._alunoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.aluno.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._alunoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(FaculdadeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._alunoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.aluno.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._alunoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cursoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.curso.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cursoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(FaculdadeDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._alunoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._alunoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._cursoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cursoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager não contém informações de conexão. Defina cada propriedade Ta" +
                        "bleAdapter de TableAdapterManager como uma instância válida de TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Não é possível iniciar a transação. Os dados de conexão atuais não oferecem supor" +
                        "te às transações ou o estado atual não permite que a transação inicie.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._alunoTableAdapter != null)) {
                    revertConnections.Add(this._alunoTableAdapter, this._alunoTableAdapter.Connection);
                    this._alunoTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._alunoTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._alunoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._alunoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._alunoTableAdapter.Adapter);
                    }
                }
                if ((this._cursoTableAdapter != null)) {
                    revertConnections.Add(this._cursoTableAdapter, this._cursoTableAdapter.Connection);
                    this._cursoTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._cursoTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._cursoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cursoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cursoTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._alunoTableAdapter != null)) {
                    this._alunoTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._alunoTableAdapter]));
                    this._alunoTableAdapter.Transaction = null;
                }
                if ((this._cursoTableAdapter != null)) {
                    this._cursoTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._cursoTableAdapter]));
                    this._cursoTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591